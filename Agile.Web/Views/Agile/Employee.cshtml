@using Agile.Entities
@using Agile.Web.Controllers
@using Signum.Web.Files
@using Signum.Engine
@using (var ec = Html.TypeContext<EmployeeEntity>())
{
    <div class="row">
        <div class="col-sm-9">
            <fieldset>
                <legend>Personal Info</legend>

                <div class="form-group">
                    <label class="col-sm-2 control-label">Name</label>
                    <div class="col-sm-10">
                        <div class="form-inline">
                            @using (var ec2 = ec.SubContext())
                            {
                                ec2.FormGroupStyle = FormGroupStyle.SrOnly;
                                ec2.PlaceholderLabels = true;
                                @Html.ValueLine(ec2, e => e.TitleOfCourtesy, vl =>
                                        {
                                            vl.ValueHtmlProps["size"] = 4;
                                            vl.LabelText = "Title";
                                        })
                                @Html.ValueLine(ec2, e => e.FirstName)
                                @Html.ValueLine(ec2, e => e.LastName)
                            }
                        </div>
                    </div>
                </div>

                @Html.ValueLine(ec, e => e.BirthDate)
                @Html.ValueLine(ec, e => e.HomePhone)
            </fieldset>

            @Html.EmbeddedControl(ec, e => e.Address)

            <fieldset>
                <legend>Company data</legend>
                @Html.ValueLine(ec, e => e.TitleOfCourtesy)
                @Html.EntityLine(ec, e => e.ReportsTo)
                @Html.ValueLine(ec, e => e.HireDate)
                @Html.ValueLine(ec, e => e.Extension)
                @Html.EntityStrip(ec, e => e.Territories)
            </fieldset>
        </div>

        <div class="col-sm-3">
            @Html.FileLine(ec, a => a.Photo.Try(p => p.Retrieve()))
            @if (ec.Value.Photo != null)
            {
                <img class="img-responsive" src="@(Url.Action<FileController>(hc => hc.Download(new RuntimeInfo(ec.Value.Photo).ToString())))" />
            } @*Photo*@
        <div class="form-vertical">
            @Html.ValueLine(ec, e => e.Notes, vl =>
            {
                vl.FormGroupStyle = FormGroupStyle.Basic;
                vl.ValueLineType = ValueLineType.TextArea;
                vl.ValueHtmlProps["rows"] = "10";
                vl.ValueHtmlProps["class"] = "notes";
            })
        </div>
        </div>
    </div>
}
